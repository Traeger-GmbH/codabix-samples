{"version":3,"file":"codabix-signalr.js","sourceRoot":"","sources":["../../src/lib/codabix-signalr.ts"],"names":[],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport adminPrerequisite from './adminPrerequisite.js';\r\nimport { NodeId, ReadNode, CreateNode } from './types.js';\r\nimport { IWebError, IWebResponse, WebResponseStatus } from './web-response.js';\r\nimport { NodeQueryIdentifier } from './node.js';\r\nimport { IUpdateNode } from './update-node.js';\r\nimport { INodeChildrenChanges, INodePropertyChanges, INodeValueChanges } from './receive-changes.js';\r\nimport { INodeValue, INodeValueStatus } from './node-value.js';\r\nimport { IContinuationPoint } from './parameters.js';\r\nimport { clientState } from './clientState.js'\r\nconst signalrNodesPath = '/api/signalr/nodes';\r\nconst authenticatePath = '/api/rest/users/authenticate';\r\nconst defaultReconnectDelay = 5000;\r\nlet reconnectDelaySnapshot;\r\n\r\n\r\ninterface AuthenticateModel {\r\n  username: string;\r\n  password: string;\r\n  adminPrerequisite?: string;\r\n}\r\n\r\nexport class Client {\r\n  public constructor(host: string) {\r\n    this.host = host;\r\n  }\r\n\r\n  public async connect(usernameOrToken: string, password?: string) {\r\n    this.changeState(clientState.Connecting);\r\n    if (password === undefined) {\r\n      this.authToken = usernameOrToken;\r\n    }\r\n    else {\r\n      this.username = usernameOrToken;\r\n      this.password = password;\r\n    }\r\n\r\n    if (this.authToken === undefined) {\r\n      let credentials: AuthenticateModel = {\r\n        username: this.username,\r\n        password: this.password\r\n      };\r\n\r\n      if (this.username === 'admin') {\r\n        credentials.adminPrerequisite = adminPrerequisite;\r\n      }\r\n\r\n      let response: AxiosResponse<any>;\r\n      try {\r\n        response = await axios.post(\r\n          this.host + authenticatePath,\r\n          credentials);\r\n      } catch (e) {\r\n        this.changeState(clientState.Disconnected);\r\n        throw new Error('An error occurred during authentication: ' + e);\r\n      }\r\n\r\n      if (response.status === 200) {\r\n        this.authToken = response.data.token;\r\n      }\r\n      else {\r\n        this.changeState(clientState.Disconnected);\r\n        throw new Error('An error occurred during authentication: ' + response.data);\r\n      }\r\n    }\r\n\r\n    this.connection = new signalR.HubConnectionBuilder()\r\n      .withUrl(\r\n        this.host + signalrNodesPath,\r\n        {\r\n          accessTokenFactory: () => this.authToken,\r\n          withCredentials: false\r\n        })\r\n      .build();\r\n\r\n    this.connection.onclose(() => {\r\n      this.onClosed();\r\n    });\r\n\r\n    reconnectDelaySnapshot = defaultReconnectDelay;\r\n\r\n    this.isCancellationRequested = false;\r\n\r\n    this.applyConnectionSettings();\r\n    await this.startConnection();\r\n    this.changeState(clientState.Connected);\r\n  }\r\n\r\n  private async startConnection() {\r\n    try {\r\n      await this.connection.start();\r\n    } catch (err) {\r\n      this.changeState(clientState.Disconnected);\r\n      throw new Error('An error occurred during connecting: ' + err);\r\n    }\r\n  }\r\n\r\n  private async onClosed() {\r\n    if (this.state !== clientState.Disconnecting && reconnectDelaySnapshot > 0) {\r\n      this.changeState(clientState.Reconnecting);\r\n      while (!this.isCancellationRequested) {\r\n        try {\r\n          await this.connection.start();\r\n          if (this.isCancellationRequested) {\r\n            await this.disconnect();\r\n            return;\r\n          }\r\n          this.changeState(clientState.Reconnected);\r\n          return;\r\n        } catch {\r\n\r\n        }\r\n        this.wait(reconnectDelaySnapshot);\r\n      }\r\n    }\r\n    this.changeState(clientState.Disconnected);\r\n  }\r\n\r\n  public async disconnect() {\r\n    this.changeState(clientState.Disconnecting);\r\n    this.isCancellationRequested = true;\r\n    await this.connection.stop();\r\n    this.changeState(clientState.Disconnected);\r\n  }\r\n\r\n  private wait(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  private async changeState(state: clientState) {\r\n    if (state == clientState.Connecting) {\r\n      await this.onConnectingHandler?.call(null);\r\n    }\r\n    else if (state === clientState.Connected) {\r\n      await this.onConnectedHandler?.call(null);\r\n    }\r\n    else if (state === clientState.Disconnecting) {\r\n      await this.onDisconnectingHandler?.call(null);\r\n    }\r\n    else if (state === clientState.Disconnected) {\r\n      await this.onDisconnectedHandler?.call(null);\r\n    }\r\n    else if (state === clientState.Reconnecting) {\r\n      await this.onReconnectingHandler?.call(null);\r\n    }\r\n    else if (state === clientState.Reconnected) {\r\n      await this.onReconnectedHandler?.call(null);\r\n    }\r\n  }\r\n\r\n  public onConnecting(callback: (error?: Error) => void): void {\r\n    this.onConnectingHandler = callback;\r\n  }\r\n\r\n  public onConnected(callback: (error?: Error) => void): void {\r\n    this.onConnectedHandler = callback;\r\n  }\r\n\r\n  public onDisconnecting(callback: (error?: Error) => void): void {\r\n    this.onDisconnectingHandler = callback;\r\n  }\r\n\r\n  public onDisconnected(callback: (error?: Error) => void): void {\r\n    this.onDisconnectedHandler = callback;\r\n  }\r\n\r\n  public onReconnecting(callback: (error?: Error) => void): void {\r\n    this.onReconnectingHandler = callback;\r\n  }\r\n\r\n  public onReconnected(callback: (error?: Error) => void): void {\r\n    this.onReconnectedHandler = callback;\r\n  }\r\n\r\n  private applyConnectionSettings() {\r\n    reconnectDelaySnapshot = this.reconnectDelay;\r\n  }\r\n\r\n  public async readNode(id: NodeQueryIdentifier): Promise<ReadNode> {\r\n    let request = {\r\n      command: {\r\n        id: id\r\n      }\r\n    };\r\n    let response = await this.connection.invoke('ReadNode', request);\r\n    this.handleError(response);\r\n    return response.result.node;\r\n  }\r\n\r\n  public async readNodes(ids: Array<NodeQueryIdentifier>): Promise<ReadNode[]> {\r\n    let request = {\r\n      commands: ids.map(e => {\r\n        return { id: e }\r\n      })\r\n    };\r\n    let response = await this.connection.invoke('ReadNodes', request);\r\n    this.handleError(response);\r\n    return response.result.map(e => e.node);\r\n  }\r\n\r\n  public async createNode(node: CreateNode): Promise<NodeId> {\r\n    let request = {\r\n      command: {\r\n        node: node\r\n      }\r\n    };\r\n    let response = await this.connection.invoke('CreateNode', request);\r\n    this.handleError(response);\r\n    return response.result.id;\r\n  }\r\n\r\n  public async createNodes(nodes: Array<CreateNode>): Promise<Array<{ status: number, id: NodeId, clientRef: any }>> {\r\n    let request = {\r\n      commands: nodes.map(e => {\r\n        return { node: e }\r\n      })\r\n    };\r\n    let response = await this.connection.invoke('CreateNodes', request);\r\n    this.handleError(response);\r\n    return response.result;\r\n  }\r\n\r\n  public async deleteNode(id: NodeQueryIdentifier): Promise<void> {\r\n    let request = {\r\n      command: {\r\n        id: id\r\n      }\r\n    };\r\n    let response = await this.connection.invoke('DeleteNode', request);\r\n    this.handleError(response);\r\n  }\r\n\r\n  public async updateNode(id: NodeQueryIdentifier, node: IUpdateNode): Promise<void> {\r\n    let request = {\r\n      command: {\r\n        id: id,\r\n        node: node\r\n      }\r\n    };\r\n    let response = await this.connection.invoke('UpdateNode', request);\r\n    this.handleError(response);\r\n  }\r\n\r\n  public async linkNode(id: NodeQueryIdentifier, destinationId: NodeQueryIdentifier): Promise<void> {\r\n    let request = {\r\n      command: {\r\n        id: id,\r\n        destinationId: destinationId\r\n      }\r\n    };\r\n    let response = await this.connection.invoke('LinkNode', request);\r\n    this.handleError(response);\r\n  }\r\n\r\n  public async readChildNodes(id: NodeQueryIdentifier): Promise<ReadNode> {\r\n    let request = {\r\n      command: {\r\n        id: id\r\n      }\r\n    };\r\n    let response = await this.connection.invoke('ReadChildNodes', request);\r\n    this.handleError(response);\r\n    return response.result.nodes;\r\n  }\r\n\r\n  public subscribeValueChanges(\r\n    ids: Array<NodeQueryIdentifier>,\r\n    createSubscription?: boolean,\r\n    interval?: number,\r\n    forceUpdate?: boolean): signalR.IStreamResult<INodeValueChanges> {\r\n    let request = {\r\n      nodes: ids,\r\n      createSubscription: createSubscription,\r\n      interval: interval,\r\n      forceUpdate: forceUpdate\r\n    };\r\n    return this.connection.stream(\r\n      'SubscribeValueChanges',\r\n      request\r\n    )\r\n  }\r\n\r\n  public subscribePropertyChanges(...ids: Array<NodeQueryIdentifier>): signalR.IStreamResult<INodePropertyChanges> {\r\n    let request = {\r\n      nodes: ids\r\n    };\r\n    return this.connection.stream(\r\n      'SubscribePropertyChanges',\r\n      request\r\n    )\r\n  }\r\n\r\n  public subscribeChildrenChanges(...ids: Array<NodeQueryIdentifier>): signalR.IStreamResult<INodeChildrenChanges> {\r\n    let request = {\r\n      nodes: ids\r\n    };\r\n    return this.connection.stream(\r\n      'SubscribeChildrenChanges',\r\n      request\r\n    )\r\n  }\r\n\r\n  public async writeNodeValue(id: NodeQueryIdentifier, value: INodeValue | any): Promise<INodeValueStatus> {\r\n    if (!value || !value.value) {\r\n      value = {\r\n        value: value\r\n      }\r\n    };\r\n    let request = {\r\n      command: {\r\n        id: id,\r\n        value: value\r\n      }\r\n    };\r\n    let response = await this.connection.invoke('WriteNodeValue', request);\r\n    this.handleError(response);\r\n    return response.result.status;\r\n  }\r\n\r\n  public async writeNodeValues(nodeValuePairs: Array<{ id: NodeQueryIdentifier, value: INodeValue | any }>): Promise<Array<INodeValueStatus>> {\r\n    nodeValuePairs.forEach(item => {\r\n      if (!item.value || !item.value.value) {\r\n        item.value = {\r\n          value: item.value\r\n        }\r\n      };\r\n    })\r\n    let request = {\r\n      commands: nodeValuePairs.map(e => {\r\n        return {\r\n          id: e.id,\r\n          value: e.value\r\n        };\r\n      })\r\n    };\r\n    console.log(JSON.stringify(request));\r\n    let response = await this.connection.invoke('WriteNodeValues', request);\r\n    this.handleError(response);\r\n    return response.result;\r\n  }\r\n\r\n  public async readNodeValue(id: NodeQueryIdentifier, performRead: boolean = false, timeToLive?: number): Promise<INodeValue> {\r\n    let request = {\r\n      command: {\r\n        id: id,\r\n        performRead: performRead,\r\n        timeToLive: timeToLive\r\n      }\r\n    };\r\n    let response = await this.connection.invoke('ReadNodeValue', request);\r\n    this.handleError(response);\r\n    return response.result.value;\r\n  }\r\n\r\n  public async readNodeValueHistory(\r\n    id: NodeQueryIdentifier,\r\n    start: Date,\r\n    end: Date,\r\n    timeInterval?: number,\r\n    limit?: number,\r\n    continuationPoint?: IContinuationPoint):\r\n    Promise<{ values: Array<INodeValue>, continuationPoint: IContinuationPoint | null }> {\r\n    let skipFirst: boolean = false;\r\n    if (continuationPoint) {\r\n      start = continuationPoint.timestamp;\r\n      skipFirst = true;\r\n    }\r\n    let request: any = {\r\n      command: {\r\n        id: id,\r\n      },\r\n      start: start,\r\n      end: end,\r\n      timeInterval: timeInterval,\r\n      skipFirst: skipFirst\r\n    };\r\n    if (limit) {\r\n      request.limit = limit;\r\n    }\r\n    let response = await this.connection.invoke('ReadNodeValueHistory', request);\r\n    this.handleError(response);\r\n\r\n    let result = {\r\n      values: response.result.values,\r\n      continuationPoint: null\r\n    };\r\n    if (response.nextStart) {\r\n      result.continuationPoint = {\r\n        timestamp: response.nextStart\r\n      };\r\n    }\r\n    else {\r\n      result.continuationPoint = null;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public async readNodesValueHistory(\r\n    ids: Array<NodeQueryIdentifier>,\r\n    start: Date,\r\n    end: Date,\r\n    timeInterval: number,\r\n    limit?: number,\r\n    continuationPoint?: IContinuationPoint):\r\n    Promise<{ values: Array<Array<INodeValue>>, continuationPoint: IContinuationPoint | null }> {\r\n    let skipFirst: boolean = false;\r\n    if (continuationPoint) {\r\n      start = continuationPoint.timestamp;\r\n      skipFirst = true;\r\n    }\r\n    let request: any = {\r\n      commands: ids.map(e => {\r\n        return { id: e };\r\n      }),\r\n      start: start,\r\n      end: end,\r\n      timeInterval: timeInterval,\r\n      skipFirst: skipFirst\r\n    };\r\n    if (limit) {\r\n      request.limit = limit;\r\n    }\r\n    let response = await this.connection.invoke('ReadNodesValueHistory', request);\r\n    this.handleError(response);\r\n    let result: { values: Array<Array<INodeValue>>, continuationPoint: IContinuationPoint | null } =\r\n    {\r\n      values: response.result.map(e => e.values),\r\n      continuationPoint: response.nextStart ?\r\n        {\r\n          timestamp: response.nextStart\r\n        }\r\n        :\r\n        null\r\n    };\r\n    return result;\r\n  }\r\n\r\n  private handleError(response: IWebResponse) {\r\n    if (response.status === WebResponseStatus.success) {\r\n      return response;\r\n    }\r\n    else {\r\n      const message = Client.generateErrorMessage(response.error);\r\n      throw new Error(message);\r\n    }\r\n  }\r\n\r\n  private static generateErrorMessage(error: IWebError) {\r\n    let message = error.detail;\r\n    if (error.parameters) {\r\n      console.log(error.parameters);\r\n      message += ':\\n\\nParameters:\\n';\r\n      for (const [key, value] of Object.entries(error.parameters)) {\r\n        // error.parameters.forEach((value, key) => {\r\n        message += `\"${key}\": ${JSON.stringify(value)}\\n`;\r\n      }\r\n      message += '\\n\\n';\r\n    }\r\n    if (error.errors) {\r\n      message += ':\\n\\nSub errors:\\n';\r\n      error.errors.forEach(e => {\r\n        message += this.generateErrorMessage(e);\r\n      })\r\n    }\r\n    return message;\r\n  }\r\n\r\n  public get state() {\r\n    return this.clientState;\r\n  }\r\n\r\n  public get reconnectDelay() {\r\n    return this.delay;\r\n  }\r\n\r\n  public set reconnectDelay(value) {\r\n    this.delay = value;\r\n  }\r\n\r\n  private isCancellationRequested: boolean;\r\n  private host: string;\r\n  private username: string;\r\n  private password: string;\r\n  private authToken: string;\r\n  private connection: signalR.HubConnection;\r\n  private clientState: clientState;\r\n  private delay: number = defaultReconnectDelay;\r\n  private onConnectingHandler: (error?: Error) => void;\r\n  private onConnectedHandler: (error?: Error) => void;\r\n  private onReconnectingHandler: (error?: Error) => void;\r\n  private onReconnectedHandler: (error?: Error) => void;\r\n  private onDisconnectedHandler: (error?: Error) => void;\r\n  private onDisconnectingHandler: (error?: Error) => void\r\n}\r\n\r\nexport * from './types.js';\r\n"]}