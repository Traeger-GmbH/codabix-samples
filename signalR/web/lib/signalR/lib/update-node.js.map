{"version":3,"file":"update-node.js","sourceRoot":"","sources":["../../src/lib/update-node.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;GAkBG","sourcesContent":["/**\r\n * If you import a dependency which does not include its own type definitions,\r\n * TypeScript will try to find a definition for it by following the `typeRoots`\r\n * compiler option in tsconfig.json. For this project, we've configured it to\r\n * fall back to this folder if nothing is found in node_modules/@types.\r\n *\r\n * Often, you can install the DefinitelyTyped\r\n * (https://github.com/DefinitelyTyped/DefinitelyTyped) type definition for the\r\n * dependency in question. However, if no one has yet contributed definitions\r\n * for the package, you may want to declare your own. (If you're using the\r\n * `noImplicitAny` compiler options, you'll be required to declare it.)\r\n *\r\n * This is an example type definition which allows import from `module-name`,\r\n * e.g.:\r\n * ```ts\r\n * import something from 'module-name';\r\n * something();\r\n * ```\r\n */\r\n\r\nimport { NodeQueryIdentifier, NodeType, PathValue, Type } from \"./node.js\";\r\n\r\nexport interface IUpdateNode {\r\n  name?: string | null;\r\n  parentId?: NodeQueryIdentifier | null;\r\n  type?: NodeType;\r\n\r\n  displayName?: string | null;\r\n  description?: string | null;\r\n  maxValueAge?: number | null;\r\n  pathType?: Type;\r\n  path?: PathValue | null;\r\n}\r\n\r\nexport interface IUpdateValueNode extends IUpdateNode {\r\n  valueType?: Type;\r\n  \r\n  location?: string | null;\r\n  historyOptions?: string | null;\r\n  historyInterval?: number | null;\r\n  minValue?: number | null;\r\n  maxValue?: number | null;\r\n  hysteresis?: number | null;\r\n  scalingFactor?: number | null;\r\n  scalingOffset?: number | null;\r\n  unit?: string | null;\r\n  format?: string | null;\r\n}\r\n"]}